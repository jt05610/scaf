// Code generated by github.com/jt05610/scaf, DO NOT EDIT.
// Author: {{.Author}}
// Date: {{.Date}}

{{- $pkgName := .Name}}

package graph

import (
	"context"
	"fmt"
	"{{.Name}}/v1"
)

{{- range .Funcs}}
// {{.Name}} is the resolver for the {{.Name}} field.
func (r *mutationResolver) {{.Name}}(ctx context.Context, input *{{$pkgName}}.{{.Name}}Input) (*housework.{{.Name}}Payload, error) {

	return r.{{$pkgName}}.{{.Name}}(ctx, input)
}

{{- end}}

{{- range .Types}}
{{- if .Query}}
// {{.Name}} is the resolver for the {{.Name}} field.
func (r *queryResolver) {{.Name}}(ctx context.Context, id string) (*{{$pkgName}}.{{.Name}}, error) {
	iId, err := strconv.Atoi(id)
	if err != nil {
		return nil, err
	}
	return r.{{$pkgName}}.Get(ctx, &{{$pkgName}}.Get{{.Name}}Input{Id: int64(iId)})
}

// {{pluralize .Name}} is the resolver for the {{pluralize .Name}} field.
func (r *queryResolver) {{pluralize .Name}}(ctx context.Context) ([]*{{$pkgName}}.{{.Name}}, error) {
	c, err := r.{{$pkgName}}.List(ctx, nil)
	if err != nil {
		return nil, err
	}
	return c.{{pluralize .Name}}, nil
}

{{- end}}
{{- end}}


// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
